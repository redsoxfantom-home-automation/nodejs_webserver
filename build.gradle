/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'tom' at '9/14/16 9:09 PM' with Gradle 2.10
 */
// Import common tasks
apply from: "..${File.separator}automation-utilities${File.separator}build${File.separator}build.support.gradle"

// Define dependencies to copy over in the copyDependencies task
ext.dependencies = ["automation-utilities"]

// Define executables that must be present on the system to do a native deploy and run
ext.requiredNativeExecutables = ["node","npm", "daemonize"]

// Overwrite the build task in build.support
build {
   dependsOn copyDependencies
   dependsOn copySources
   dependsOn parseTemplates

   // Create a dependency tree of copySources->copyDependencies->parseTemplates
   copyDependencies.mustRunAfter copySources
   parseTemplates.mustRunAfter copyDependencies
}

// Runs an application that does not use Docker
runNativeApplication << {
	Properties props = loadProperties()
	String home = getProjectDirectory()
	
	exec {
		executable "daemonize"
		workingDir "${buildDir}"
		args=["-E", "ZK_HOST=${props.zookeeperHost}",
			  "-E", "ZK_PORT=${props.zookeeperPort}",
			  "-e", "${home}${File.separator}err",
			  "-o", "${home}${File.separator}out",
			  "-p", "${home}${File.separator}pid",
			  "/usr/bin/node", "${buildDir}${File.separator}index.js"]
	}
}

// Creates an application that does not use Docker
deployNativeApplication << {
	exec {
		executable "npm"
		workingDir "${buildDir}"
		args=["install"]
	}
}
